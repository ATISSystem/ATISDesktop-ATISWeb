<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PicMblghZero.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>