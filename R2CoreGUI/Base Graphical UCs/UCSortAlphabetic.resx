<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PicSort.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>