'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace PayanehWS
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="PayanehWebServiceSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class PayanehWebService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private WebMethodReportingInformationPrividerSedimentedLoadsReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodReportingInformationPrividerTruckersAssociationFinancialReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodReportingInformationPrividerContractorCompanyFinancialReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodReportingInformationPrividerDriverTruckLoadsReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodReportingInformationProviderTransportPriceTarrifsReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodGetDSPersonnelFingerPrintsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodComputerMessageProduceCopyOfTurnOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodComputerMessageProduceSodoorNobatOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodCarTruckHasTurnOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodTransportCompanyLoadCapacitorLoadRegisterOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodTransportCompanyLoadCapacitorLoadEditOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodTransportCompanyLoadCapacitorLoadDeleteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodTransportCompanyLoadsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodTransportCompanyCitiesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodTransportCompanyCarTypesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodTransportCompanyLoadCapacitorLoadsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodTransportCompanyLoadCapacitorSedimentedLoadsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodGetNSSCarTruckBySmartCarNofromRmtoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodGetNSSCarTruckBySmartCarNofromLocalDataBaseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodGetNSSDriverTruckBySmartCarNofromRmtoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBaseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodMobileUserMobileNumberRegisteringOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodCreateRelationBetweenCarTruckAndDriverTruckOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationMessageProduceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAndPermisiionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiionPrintingInfOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodTransportCompanyGetMoneyWalletInventoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodGetAllPermissionEnterExitsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodGetTransportCompaniesDailyMessageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodGetTransportCompaniesFirstPageMessagesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WebMethodISCompanyActiveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.PAKTCRemoteApplication.My.MySettings.Default.PAKTCRemoteApplication_PayanehWS_PayanehWebService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event WebMethodReportingInformationPrividerSedimentedLoadsReportCompleted As WebMethodReportingInformationPrividerSedimentedLoadsReportCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodReportingInformationPrividerTruckersAssociationFinancialReportCompleted As WebMethodReportingInformationPrividerTruckersAssociationFinancialReportCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodReportingInformationPrividerContractorCompanyFinancialReportCompleted As WebMethodReportingInformationPrividerContractorCompanyFinancialReportCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodReportingInformationPrividerDriverTruckLoadsReportCompleted As WebMethodReportingInformationPrividerDriverTruckLoadsReportCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportCompleted As WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportCompleted As WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportCompleted As WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportCompleted As WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionReportCompleted As WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionReportCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportCompleted As WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportCompleted As WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodReportingInformationProviderTransportPriceTarrifsReportCompleted As WebMethodReportingInformationProviderTransportPriceTarrifsReportCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportCompleted As WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodGetDSPersonnelFingerPrintsCompleted As WebMethodGetDSPersonnelFingerPrintsCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodComputerMessageProduceCopyOfTurnCompleted As WebMethodComputerMessageProduceCopyOfTurnCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodComputerMessageProduceSodoorNobatCompleted As WebMethodComputerMessageProduceSodoorNobatCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodCarTruckHasTurnCompleted As WebMethodCarTruckHasTurnCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodTransportCompanyLoadCapacitorLoadRegisterCompleted As WebMethodTransportCompanyLoadCapacitorLoadRegisterCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTIdCompleted As WebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTIdCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodTransportCompanyLoadCapacitorLoadEditCompleted As WebMethodTransportCompanyLoadCapacitorLoadEditCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodTransportCompanyLoadCapacitorLoadDeleteCompleted As WebMethodTransportCompanyLoadCapacitorLoadDeleteCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodTransportCompanyLoadsCompleted As WebMethodTransportCompanyLoadsCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodTransportCompanyCitiesCompleted As WebMethodTransportCompanyCitiesCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodTransportCompanyCarTypesCompleted As WebMethodTransportCompanyCarTypesCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodTransportCompanyLoadCapacitorLoadsCompleted As WebMethodTransportCompanyLoadCapacitorLoadsCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodTransportCompanyLoadCapacitorSedimentedLoadsCompleted As WebMethodTransportCompanyLoadCapacitorSedimentedLoadsCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodGetNSSCarTruckBySmartCarNofromRmtoCompleted As WebMethodGetNSSCarTruckBySmartCarNofromRmtoCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodGetNSSCarTruckBySmartCarNofromLocalDataBaseCompleted As WebMethodGetNSSCarTruckBySmartCarNofromLocalDataBaseCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodGetNSSDriverTruckBySmartCarNofromRmtoCompleted As WebMethodGetNSSDriverTruckBySmartCarNofromRmtoCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBaseCompleted As WebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBaseCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodMobileUserMobileNumberRegisteringCompleted As WebMethodMobileUserMobileNumberRegisteringCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodCreateRelationBetweenCarTruckAndDriverTruckCompleted As WebMethodCreateRelationBetweenCarTruckAndDriverTruckCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationMessageProduceCompleted As WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationMessageProduceCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAndPermisiionCompleted As WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAndPermisiionCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiionPrintingInfCompleted As WebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiionPrintingInfCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodTransportCompanyGetMoneyWalletInventoryCompleted As WebMethodTransportCompanyGetMoneyWalletInventoryCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodGetAllPermissionEnterExitsCompleted As WebMethodGetAllPermissionEnterExitsCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodGetTransportCompaniesDailyMessageCompleted As WebMethodGetTransportCompaniesDailyMessageCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodGetTransportCompaniesFirstPageMessagesCompleted As WebMethodGetTransportCompaniesFirstPageMessagesCompletedEventHandler
        
        '''<remarks/>
        Public Event WebMethodISCompanyActiveCompleted As WebMethodISCompanyActiveCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerSedimentedLoadsReport", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodReportingInformationPrividerSedimentedLoadsReport(ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String, ByVal YourAnnouncementHallId As Long, ByVal YourSedimentedLoadsReportType As Integer)
            Me.Invoke("WebMethodReportingInformationPrividerSedimentedLoadsReport", New Object() {YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourAnnouncementHallId, YourSedimentedLoadsReportType})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerSedimentedLoadsReportAsync(ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String, ByVal YourAnnouncementHallId As Long, ByVal YourSedimentedLoadsReportType As Integer)
            Me.WebMethodReportingInformationPrividerSedimentedLoadsReportAsync(YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourAnnouncementHallId, YourSedimentedLoadsReportType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerSedimentedLoadsReportAsync(ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String, ByVal YourAnnouncementHallId As Long, ByVal YourSedimentedLoadsReportType As Integer, ByVal userState As Object)
            If (Me.WebMethodReportingInformationPrividerSedimentedLoadsReportOperationCompleted Is Nothing) Then
                Me.WebMethodReportingInformationPrividerSedimentedLoadsReportOperationCompleted = AddressOf Me.OnWebMethodReportingInformationPrividerSedimentedLoadsReportOperationCompleted
            End If
            Me.InvokeAsync("WebMethodReportingInformationPrividerSedimentedLoadsReport", New Object() {YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourAnnouncementHallId, YourSedimentedLoadsReportType}, Me.WebMethodReportingInformationPrividerSedimentedLoadsReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodReportingInformationPrividerSedimentedLoadsReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodReportingInformationPrividerSedimentedLoadsReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodReportingInformationPrividerSedimentedLoadsReportCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerTruckersAssociationFinanc"& _ 
            "ialReport", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodReportingInformationPrividerTruckersAssociationFinancialReport(ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String)
            Me.Invoke("WebMethodReportingInformationPrividerTruckersAssociationFinancialReport", New Object() {YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerTruckersAssociationFinancialReportAsync(ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String)
            Me.WebMethodReportingInformationPrividerTruckersAssociationFinancialReportAsync(YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerTruckersAssociationFinancialReportAsync(ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String, ByVal userState As Object)
            If (Me.WebMethodReportingInformationPrividerTruckersAssociationFinancialReportOperationCompleted Is Nothing) Then
                Me.WebMethodReportingInformationPrividerTruckersAssociationFinancialReportOperationCompleted = AddressOf Me.OnWebMethodReportingInformationPrividerTruckersAssociationFinancialReportOperationCompleted
            End If
            Me.InvokeAsync("WebMethodReportingInformationPrividerTruckersAssociationFinancialReport", New Object() {YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2}, Me.WebMethodReportingInformationPrividerTruckersAssociationFinancialReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodReportingInformationPrividerTruckersAssociationFinancialReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodReportingInformationPrividerTruckersAssociationFinancialReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodReportingInformationPrividerTruckersAssociationFinancialReportCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerContractorCompanyFinancia"& _ 
            "lReport", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodReportingInformationPrividerContractorCompanyFinancialReport(ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String, ByVal YourVatStatus As Boolean)
            Me.Invoke("WebMethodReportingInformationPrividerContractorCompanyFinancialReport", New Object() {YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourVatStatus})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerContractorCompanyFinancialReportAsync(ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String, ByVal YourVatStatus As Boolean)
            Me.WebMethodReportingInformationPrividerContractorCompanyFinancialReportAsync(YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourVatStatus, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerContractorCompanyFinancialReportAsync(ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String, ByVal YourVatStatus As Boolean, ByVal userState As Object)
            If (Me.WebMethodReportingInformationPrividerContractorCompanyFinancialReportOperationCompleted Is Nothing) Then
                Me.WebMethodReportingInformationPrividerContractorCompanyFinancialReportOperationCompleted = AddressOf Me.OnWebMethodReportingInformationPrividerContractorCompanyFinancialReportOperationCompleted
            End If
            Me.InvokeAsync("WebMethodReportingInformationPrividerContractorCompanyFinancialReport", New Object() {YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourVatStatus}, Me.WebMethodReportingInformationPrividerContractorCompanyFinancialReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodReportingInformationPrividerContractorCompanyFinancialReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodReportingInformationPrividerContractorCompanyFinancialReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodReportingInformationPrividerContractorCompanyFinancialReportCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerDriverTruckLoadsReport", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodReportingInformationPrividerDriverTruckLoadsReport(ByVal YourDriverId As Long, ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String)
            Me.Invoke("WebMethodReportingInformationPrividerDriverTruckLoadsReport", New Object() {YourDriverId, YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerDriverTruckLoadsReportAsync(ByVal YourDriverId As Long, ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String)
            Me.WebMethodReportingInformationPrividerDriverTruckLoadsReportAsync(YourDriverId, YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerDriverTruckLoadsReportAsync(ByVal YourDriverId As Long, ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String, ByVal userState As Object)
            If (Me.WebMethodReportingInformationPrividerDriverTruckLoadsReportOperationCompleted Is Nothing) Then
                Me.WebMethodReportingInformationPrividerDriverTruckLoadsReportOperationCompleted = AddressOf Me.OnWebMethodReportingInformationPrividerDriverTruckLoadsReportOperationCompleted
            End If
            Me.InvokeAsync("WebMethodReportingInformationPrividerDriverTruckLoadsReport", New Object() {YourDriverId, YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2}, Me.WebMethodReportingInformationPrividerDriverTruckLoadsReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodReportingInformationPrividerDriverTruckLoadsReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodReportingInformationPrividerDriverTruckLoadsReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodReportingInformationPrividerDriverTruckLoadsReportCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerCapacitorLoadsforAnnounce"& _ 
            "Report", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReport(ByVal YourAnnouncementHallId As Long, ByVal YourAnnouncementHallSubGroupId As Long)
            Me.Invoke("WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReport", New Object() {YourAnnouncementHallId, YourAnnouncementHallSubGroupId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportAsync(ByVal YourAnnouncementHallId As Long, ByVal YourAnnouncementHallSubGroupId As Long)
            Me.WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportAsync(YourAnnouncementHallId, YourAnnouncementHallSubGroupId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportAsync(ByVal YourAnnouncementHallId As Long, ByVal YourAnnouncementHallSubGroupId As Long, ByVal userState As Object)
            If (Me.WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportOperationCompleted Is Nothing) Then
                Me.WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportOperationCompleted = AddressOf Me.OnWebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportOperationCompleted
            End If
            Me.InvokeAsync("WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReport", New Object() {YourAnnouncementHallId, YourAnnouncementHallSubGroupId}, Me.WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerCapacitorLoadsTransportCo"& _ 
            "mpaniesRegisteredLoadsReport", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReport(ByVal YourAnnouncementHallId As Long, ByVal YourCompanyCode As Long, ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String, ByVal YourTargetCityId As Long)
            Me.Invoke("WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLo"& _ 
                    "adsReport", New Object() {YourAnnouncementHallId, YourCompanyCode, YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourTargetCityId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportAsync(ByVal YourAnnouncementHallId As Long, ByVal YourCompanyCode As Long, ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String, ByVal YourTargetCityId As Long)
            Me.WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportAsync(YourAnnouncementHallId, YourCompanyCode, YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourTargetCityId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportAsync(ByVal YourAnnouncementHallId As Long, ByVal YourCompanyCode As Long, ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String, ByVal YourTargetCityId As Long, ByVal userState As Object)
            If (Me.WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportOperationCompleted Is Nothing) Then
                Me.WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportOperationCompleted = AddressOf Me.OnWebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportOperationCompleted
            End If
            Me.InvokeAsync("WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLo"& _ 
                    "adsReport", New Object() {YourAnnouncementHallId, YourCompanyCode, YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourTargetCityId}, Me.WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerAnnouncementHallsPerforma"& _ 
            "nceReport", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReport(ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String, ByVal YourAHId As Long)
            Me.Invoke("WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReport", New Object() {YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourAHId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportAsync(ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String, ByVal YourAHId As Long)
            Me.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportAsync(YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourAHId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportAsync(ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String, ByVal YourAHId As Long, ByVal userState As Object)
            If (Me.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportOperationCompleted Is Nothing) Then
                Me.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportOperationCompleted = AddressOf Me.OnWebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportOperationCompleted
            End If
            Me.InvokeAsync("WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReport", New Object() {YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourAHId}, Me.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerAnnouncementHallsPerforma"& _ 
            "nceGeneralStatisticsReport", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReport(ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String)
            Me.Invoke("WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatistic"& _ 
                    "sReport", New Object() {YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportAsync(ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String)
            Me.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportAsync(YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportAsync(ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String, ByVal userState As Object)
            If (Me.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportOperationCompleted Is Nothing) Then
                Me.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportOperationCompleted = AddressOf Me.OnWebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportOperationCompleted
            End If
            Me.InvokeAsync("WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatistic"& _ 
                    "sReport", New Object() {YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2}, Me.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerTruckDriversWaitingToGetL"& _ 
            "oadPermissionReport", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionReport(ByVal YourAnnouncementHallSubGroupId As Long)
            Me.Invoke("WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionReport"& _ 
                    "", New Object() {YourAnnouncementHallSubGroupId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionReportAsync(ByVal YourAnnouncementHallSubGroupId As Long)
            Me.WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionReportAsync(YourAnnouncementHallSubGroupId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionReportAsync(ByVal YourAnnouncementHallSubGroupId As Long, ByVal userState As Object)
            If (Me.WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionReportOperationCompleted Is Nothing) Then
                Me.WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionReportOperationCompleted = AddressOf Me.OnWebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionReportOperationCompleted
            End If
            Me.InvokeAsync("WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionReport"& _ 
                    "", New Object() {YourAnnouncementHallSubGroupId}, Me.WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionReportCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysT"& _ 
            "oGetLoadPermissionReport", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReport(ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String, ByVal YourAnnouncementHallId As Long)
            Me.Invoke("WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionR"& _ 
                    "eport", New Object() {YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourAnnouncementHallId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportAsync(ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String, ByVal YourAnnouncementHallId As Long)
            Me.WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportAsync(YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourAnnouncementHallId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportAsync(ByVal YourDateTimeMilladi1 As Date, ByVal YourDateShamsiFull1 As String, ByVal YourTime1 As String, ByVal YourDateTimeMilladi2 As Date, ByVal YourDateShamsiFull2 As String, ByVal YourTime2 As String, ByVal YourAnnouncementHallId As Long, ByVal userState As Object)
            If (Me.WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportOperationCompleted Is Nothing) Then
                Me.WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportOperationCompleted = AddressOf Me.OnWebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportOperationCompleted
            End If
            Me.InvokeAsync("WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionR"& _ 
                    "eport", New Object() {YourDateTimeMilladi1, YourDateShamsiFull1, YourTime1, YourDateTimeMilladi2, YourDateShamsiFull2, YourTime2, YourAnnouncementHallId}, Me.WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationPrividerTravelLengthOfLoadTargets"& _ 
            "Report", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReport()
            Me.Invoke("WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReport", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportAsync()
            Me.WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportAsync(ByVal userState As Object)
            If (Me.WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportOperationCompleted Is Nothing) Then
                Me.WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportOperationCompleted = AddressOf Me.OnWebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportOperationCompleted
            End If
            Me.InvokeAsync("WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReport", New Object(-1) {}, Me.WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationProviderTransportPriceTarrifsRepo"& _ 
            "rt", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodReportingInformationProviderTransportPriceTarrifsReport(ByVal YourAnnouncementHallId As Long, ByVal YourAnnouncementHallSubGroupId As Long, ByVal YourOActiveStatus As Boolean)
            Me.Invoke("WebMethodReportingInformationProviderTransportPriceTarrifsReport", New Object() {YourAnnouncementHallId, YourAnnouncementHallSubGroupId, YourOActiveStatus})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationProviderTransportPriceTarrifsReportAsync(ByVal YourAnnouncementHallId As Long, ByVal YourAnnouncementHallSubGroupId As Long, ByVal YourOActiveStatus As Boolean)
            Me.WebMethodReportingInformationProviderTransportPriceTarrifsReportAsync(YourAnnouncementHallId, YourAnnouncementHallSubGroupId, YourOActiveStatus, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationProviderTransportPriceTarrifsReportAsync(ByVal YourAnnouncementHallId As Long, ByVal YourAnnouncementHallSubGroupId As Long, ByVal YourOActiveStatus As Boolean, ByVal userState As Object)
            If (Me.WebMethodReportingInformationProviderTransportPriceTarrifsReportOperationCompleted Is Nothing) Then
                Me.WebMethodReportingInformationProviderTransportPriceTarrifsReportOperationCompleted = AddressOf Me.OnWebMethodReportingInformationProviderTransportPriceTarrifsReportOperationCompleted
            End If
            Me.InvokeAsync("WebMethodReportingInformationProviderTransportPriceTarrifsReport", New Object() {YourAnnouncementHallId, YourAnnouncementHallSubGroupId, YourOActiveStatus}, Me.WebMethodReportingInformationProviderTransportPriceTarrifsReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodReportingInformationProviderTransportPriceTarrifsReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodReportingInformationProviderTransportPriceTarrifsReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodReportingInformationProviderTransportPriceTarrifsReportCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodReportingInformationProviderIndigenousTrucksWithUNNat"& _ 
            "iveLPReport", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReport()
            Me.Invoke("WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReport", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportAsync()
            Me.WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportAsync(ByVal userState As Object)
            If (Me.WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportOperationCompleted Is Nothing) Then
                Me.WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportOperationCompleted = AddressOf Me.OnWebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportOperationCompleted
            End If
            Me.InvokeAsync("WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReport", New Object(-1) {}, Me.WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodGetDSPersonnelFingerPrints", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebMethodGetDSPersonnelFingerPrints(ByVal YourSalFull As String, ByVal YourMonthCodeFull As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WebMethodGetDSPersonnelFingerPrints", New Object() {YourSalFull, YourMonthCodeFull})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebMethodGetDSPersonnelFingerPrintsAsync(ByVal YourSalFull As String, ByVal YourMonthCodeFull As String)
            Me.WebMethodGetDSPersonnelFingerPrintsAsync(YourSalFull, YourMonthCodeFull, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodGetDSPersonnelFingerPrintsAsync(ByVal YourSalFull As String, ByVal YourMonthCodeFull As String, ByVal userState As Object)
            If (Me.WebMethodGetDSPersonnelFingerPrintsOperationCompleted Is Nothing) Then
                Me.WebMethodGetDSPersonnelFingerPrintsOperationCompleted = AddressOf Me.OnWebMethodGetDSPersonnelFingerPrintsOperationCompleted
            End If
            Me.InvokeAsync("WebMethodGetDSPersonnelFingerPrints", New Object() {YourSalFull, YourMonthCodeFull}, Me.WebMethodGetDSPersonnelFingerPrintsOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodGetDSPersonnelFingerPrintsOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodGetDSPersonnelFingerPrintsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodGetDSPersonnelFingerPrintsCompleted(Me, New WebMethodGetDSPersonnelFingerPrintsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodComputerMessageProduceCopyOfTurn", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodComputerMessageProduceCopyOfTurn(ByVal YourPelak As String, ByVal YourSerial As String)
            Me.Invoke("WebMethodComputerMessageProduceCopyOfTurn", New Object() {YourPelak, YourSerial})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodComputerMessageProduceCopyOfTurnAsync(ByVal YourPelak As String, ByVal YourSerial As String)
            Me.WebMethodComputerMessageProduceCopyOfTurnAsync(YourPelak, YourSerial, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodComputerMessageProduceCopyOfTurnAsync(ByVal YourPelak As String, ByVal YourSerial As String, ByVal userState As Object)
            If (Me.WebMethodComputerMessageProduceCopyOfTurnOperationCompleted Is Nothing) Then
                Me.WebMethodComputerMessageProduceCopyOfTurnOperationCompleted = AddressOf Me.OnWebMethodComputerMessageProduceCopyOfTurnOperationCompleted
            End If
            Me.InvokeAsync("WebMethodComputerMessageProduceCopyOfTurn", New Object() {YourPelak, YourSerial}, Me.WebMethodComputerMessageProduceCopyOfTurnOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodComputerMessageProduceCopyOfTurnOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodComputerMessageProduceCopyOfTurnCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodComputerMessageProduceCopyOfTurnCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodComputerMessageProduceSodoorNobat", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodComputerMessageProduceSodoorNobat(ByVal YourPelak As String, ByVal YourSerial As String)
            Me.Invoke("WebMethodComputerMessageProduceSodoorNobat", New Object() {YourPelak, YourSerial})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodComputerMessageProduceSodoorNobatAsync(ByVal YourPelak As String, ByVal YourSerial As String)
            Me.WebMethodComputerMessageProduceSodoorNobatAsync(YourPelak, YourSerial, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodComputerMessageProduceSodoorNobatAsync(ByVal YourPelak As String, ByVal YourSerial As String, ByVal userState As Object)
            If (Me.WebMethodComputerMessageProduceSodoorNobatOperationCompleted Is Nothing) Then
                Me.WebMethodComputerMessageProduceSodoorNobatOperationCompleted = AddressOf Me.OnWebMethodComputerMessageProduceSodoorNobatOperationCompleted
            End If
            Me.InvokeAsync("WebMethodComputerMessageProduceSodoorNobat", New Object() {YourPelak, YourSerial}, Me.WebMethodComputerMessageProduceSodoorNobatOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodComputerMessageProduceSodoorNobatOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodComputerMessageProduceSodoorNobatCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodComputerMessageProduceSodoorNobatCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodCarTruckHasTurn", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebMethodCarTruckHasTurn(ByVal YourPelak As String, ByVal YourSerial As String) As Boolean
            Dim results() As Object = Me.Invoke("WebMethodCarTruckHasTurn", New Object() {YourPelak, YourSerial})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebMethodCarTruckHasTurnAsync(ByVal YourPelak As String, ByVal YourSerial As String)
            Me.WebMethodCarTruckHasTurnAsync(YourPelak, YourSerial, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodCarTruckHasTurnAsync(ByVal YourPelak As String, ByVal YourSerial As String, ByVal userState As Object)
            If (Me.WebMethodCarTruckHasTurnOperationCompleted Is Nothing) Then
                Me.WebMethodCarTruckHasTurnOperationCompleted = AddressOf Me.OnWebMethodCarTruckHasTurnOperationCompleted
            End If
            Me.InvokeAsync("WebMethodCarTruckHasTurn", New Object() {YourPelak, YourSerial}, Me.WebMethodCarTruckHasTurnOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodCarTruckHasTurnOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodCarTruckHasTurnCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodCarTruckHasTurnCompleted(Me, New WebMethodCarTruckHasTurnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodTransportCompanyLoadCapacitorLoadRegister", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebMethodTransportCompanyLoadCapacitorLoadRegister(ByVal YourStrBarName As String, ByVal YournCityCode As Long, ByVal YournBarCode As Long, ByVal YournCompCode As Long, ByVal YournTruckType As Long, ByVal YourStrAddress As String, ByVal YournCarNumKol As Long, ByVal YourStrPriceSug As String, ByVal YourStrDescription As String) As Long
            Dim results() As Object = Me.Invoke("WebMethodTransportCompanyLoadCapacitorLoadRegister", New Object() {YourStrBarName, YournCityCode, YournBarCode, YournCompCode, YournTruckType, YourStrAddress, YournCarNumKol, YourStrPriceSug, YourStrDescription})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyLoadCapacitorLoadRegisterAsync(ByVal YourStrBarName As String, ByVal YournCityCode As Long, ByVal YournBarCode As Long, ByVal YournCompCode As Long, ByVal YournTruckType As Long, ByVal YourStrAddress As String, ByVal YournCarNumKol As Long, ByVal YourStrPriceSug As String, ByVal YourStrDescription As String)
            Me.WebMethodTransportCompanyLoadCapacitorLoadRegisterAsync(YourStrBarName, YournCityCode, YournBarCode, YournCompCode, YournTruckType, YourStrAddress, YournCarNumKol, YourStrPriceSug, YourStrDescription, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyLoadCapacitorLoadRegisterAsync(ByVal YourStrBarName As String, ByVal YournCityCode As Long, ByVal YournBarCode As Long, ByVal YournCompCode As Long, ByVal YournTruckType As Long, ByVal YourStrAddress As String, ByVal YournCarNumKol As Long, ByVal YourStrPriceSug As String, ByVal YourStrDescription As String, ByVal userState As Object)
            If (Me.WebMethodTransportCompanyLoadCapacitorLoadRegisterOperationCompleted Is Nothing) Then
                Me.WebMethodTransportCompanyLoadCapacitorLoadRegisterOperationCompleted = AddressOf Me.OnWebMethodTransportCompanyLoadCapacitorLoadRegisterOperationCompleted
            End If
            Me.InvokeAsync("WebMethodTransportCompanyLoadCapacitorLoadRegister", New Object() {YourStrBarName, YournCityCode, YournBarCode, YournCompCode, YournTruckType, YourStrAddress, YournCarNumKol, YourStrPriceSug, YourStrDescription}, Me.WebMethodTransportCompanyLoadCapacitorLoadRegisterOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodTransportCompanyLoadCapacitorLoadRegisterOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodTransportCompanyLoadCapacitorLoadRegisterCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodTransportCompanyLoadCapacitorLoadRegisterCompleted(Me, New WebMethodTransportCompanyLoadCapacitorLoadRegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTId(ByVal YourStrBarName As String, ByVal YournCityCode As Long, ByVal YournBarCode As Long, ByVal YournCompCode As Long, ByVal YournTruckType As Long, ByVal YourStrAddress As String, ByVal YournCarNumKol As Long, ByVal YourStrPriceSug As String, ByVal YourStrDescription As String, ByVal YourTarrifTransportPriceTypeId As Long) As Long
            Dim results() As Object = Me.Invoke("WebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTId", New Object() {YourStrBarName, YournCityCode, YournBarCode, YournCompCode, YournTruckType, YourStrAddress, YournCarNumKol, YourStrPriceSug, YourStrDescription, YourTarrifTransportPriceTypeId})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTIdAsync(ByVal YourStrBarName As String, ByVal YournCityCode As Long, ByVal YournBarCode As Long, ByVal YournCompCode As Long, ByVal YournTruckType As Long, ByVal YourStrAddress As String, ByVal YournCarNumKol As Long, ByVal YourStrPriceSug As String, ByVal YourStrDescription As String, ByVal YourTarrifTransportPriceTypeId As Long)
            Me.WebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTIdAsync(YourStrBarName, YournCityCode, YournBarCode, YournCompCode, YournTruckType, YourStrAddress, YournCarNumKol, YourStrPriceSug, YourStrDescription, YourTarrifTransportPriceTypeId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTIdAsync(ByVal YourStrBarName As String, ByVal YournCityCode As Long, ByVal YournBarCode As Long, ByVal YournCompCode As Long, ByVal YournTruckType As Long, ByVal YourStrAddress As String, ByVal YournCarNumKol As Long, ByVal YourStrPriceSug As String, ByVal YourStrDescription As String, ByVal YourTarrifTransportPriceTypeId As Long, ByVal userState As Object)
            If (Me.WebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTIdOperationCompleted Is Nothing) Then
                Me.WebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTIdOperationCompleted = AddressOf Me.OnWebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTIdOperationCompleted
            End If
            Me.InvokeAsync("WebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTId", New Object() {YourStrBarName, YournCityCode, YournBarCode, YournCompCode, YournTruckType, YourStrAddress, YournCarNumKol, YourStrPriceSug, YourStrDescription, YourTarrifTransportPriceTypeId}, Me.WebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTIdCompleted(Me, New WebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodTransportCompanyLoadCapacitorLoadEdit", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodTransportCompanyLoadCapacitorLoadEdit(ByVal YournEstelamId As Long, ByVal YourStrBarName As String, ByVal YournCityCode As Long, ByVal YournBarCode As Long, ByVal YournCompCode As Long, ByVal YournTruckType As Long, ByVal YourStrAddress As String, ByVal YournCarNumKol As Long, ByVal YourStrPriceSug As String, ByVal YourStrDescription As String)
            Me.Invoke("WebMethodTransportCompanyLoadCapacitorLoadEdit", New Object() {YournEstelamId, YourStrBarName, YournCityCode, YournBarCode, YournCompCode, YournTruckType, YourStrAddress, YournCarNumKol, YourStrPriceSug, YourStrDescription})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyLoadCapacitorLoadEditAsync(ByVal YournEstelamId As Long, ByVal YourStrBarName As String, ByVal YournCityCode As Long, ByVal YournBarCode As Long, ByVal YournCompCode As Long, ByVal YournTruckType As Long, ByVal YourStrAddress As String, ByVal YournCarNumKol As Long, ByVal YourStrPriceSug As String, ByVal YourStrDescription As String)
            Me.WebMethodTransportCompanyLoadCapacitorLoadEditAsync(YournEstelamId, YourStrBarName, YournCityCode, YournBarCode, YournCompCode, YournTruckType, YourStrAddress, YournCarNumKol, YourStrPriceSug, YourStrDescription, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyLoadCapacitorLoadEditAsync(ByVal YournEstelamId As Long, ByVal YourStrBarName As String, ByVal YournCityCode As Long, ByVal YournBarCode As Long, ByVal YournCompCode As Long, ByVal YournTruckType As Long, ByVal YourStrAddress As String, ByVal YournCarNumKol As Long, ByVal YourStrPriceSug As String, ByVal YourStrDescription As String, ByVal userState As Object)
            If (Me.WebMethodTransportCompanyLoadCapacitorLoadEditOperationCompleted Is Nothing) Then
                Me.WebMethodTransportCompanyLoadCapacitorLoadEditOperationCompleted = AddressOf Me.OnWebMethodTransportCompanyLoadCapacitorLoadEditOperationCompleted
            End If
            Me.InvokeAsync("WebMethodTransportCompanyLoadCapacitorLoadEdit", New Object() {YournEstelamId, YourStrBarName, YournCityCode, YournBarCode, YournCompCode, YournTruckType, YourStrAddress, YournCarNumKol, YourStrPriceSug, YourStrDescription}, Me.WebMethodTransportCompanyLoadCapacitorLoadEditOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodTransportCompanyLoadCapacitorLoadEditOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodTransportCompanyLoadCapacitorLoadEditCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodTransportCompanyLoadCapacitorLoadEditCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodTransportCompanyLoadCapacitorLoadDelete", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodTransportCompanyLoadCapacitorLoadDelete(ByVal YournEstelamId As Long)
            Me.Invoke("WebMethodTransportCompanyLoadCapacitorLoadDelete", New Object() {YournEstelamId})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyLoadCapacitorLoadDeleteAsync(ByVal YournEstelamId As Long)
            Me.WebMethodTransportCompanyLoadCapacitorLoadDeleteAsync(YournEstelamId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyLoadCapacitorLoadDeleteAsync(ByVal YournEstelamId As Long, ByVal userState As Object)
            If (Me.WebMethodTransportCompanyLoadCapacitorLoadDeleteOperationCompleted Is Nothing) Then
                Me.WebMethodTransportCompanyLoadCapacitorLoadDeleteOperationCompleted = AddressOf Me.OnWebMethodTransportCompanyLoadCapacitorLoadDeleteOperationCompleted
            End If
            Me.InvokeAsync("WebMethodTransportCompanyLoadCapacitorLoadDelete", New Object() {YournEstelamId}, Me.WebMethodTransportCompanyLoadCapacitorLoadDeleteOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodTransportCompanyLoadCapacitorLoadDeleteOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodTransportCompanyLoadCapacitorLoadDeleteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodTransportCompanyLoadCapacitorLoadDeleteCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodTransportCompanyLoads", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebMethodTransportCompanyLoads() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WebMethodTransportCompanyLoads", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyLoadsAsync()
            Me.WebMethodTransportCompanyLoadsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyLoadsAsync(ByVal userState As Object)
            If (Me.WebMethodTransportCompanyLoadsOperationCompleted Is Nothing) Then
                Me.WebMethodTransportCompanyLoadsOperationCompleted = AddressOf Me.OnWebMethodTransportCompanyLoadsOperationCompleted
            End If
            Me.InvokeAsync("WebMethodTransportCompanyLoads", New Object(-1) {}, Me.WebMethodTransportCompanyLoadsOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodTransportCompanyLoadsOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodTransportCompanyLoadsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodTransportCompanyLoadsCompleted(Me, New WebMethodTransportCompanyLoadsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodTransportCompanyCities", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebMethodTransportCompanyCities() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WebMethodTransportCompanyCities", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyCitiesAsync()
            Me.WebMethodTransportCompanyCitiesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyCitiesAsync(ByVal userState As Object)
            If (Me.WebMethodTransportCompanyCitiesOperationCompleted Is Nothing) Then
                Me.WebMethodTransportCompanyCitiesOperationCompleted = AddressOf Me.OnWebMethodTransportCompanyCitiesOperationCompleted
            End If
            Me.InvokeAsync("WebMethodTransportCompanyCities", New Object(-1) {}, Me.WebMethodTransportCompanyCitiesOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodTransportCompanyCitiesOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodTransportCompanyCitiesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodTransportCompanyCitiesCompleted(Me, New WebMethodTransportCompanyCitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodTransportCompanyCarTypes", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebMethodTransportCompanyCarTypes() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WebMethodTransportCompanyCarTypes", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyCarTypesAsync()
            Me.WebMethodTransportCompanyCarTypesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyCarTypesAsync(ByVal userState As Object)
            If (Me.WebMethodTransportCompanyCarTypesOperationCompleted Is Nothing) Then
                Me.WebMethodTransportCompanyCarTypesOperationCompleted = AddressOf Me.OnWebMethodTransportCompanyCarTypesOperationCompleted
            End If
            Me.InvokeAsync("WebMethodTransportCompanyCarTypes", New Object(-1) {}, Me.WebMethodTransportCompanyCarTypesOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodTransportCompanyCarTypesOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodTransportCompanyCarTypesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodTransportCompanyCarTypesCompleted(Me, New WebMethodTransportCompanyCarTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodTransportCompanyLoadCapacitorLoads", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebMethodTransportCompanyLoadCapacitorLoads(ByVal YourCompanyCode As Long) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WebMethodTransportCompanyLoadCapacitorLoads", New Object() {YourCompanyCode})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyLoadCapacitorLoadsAsync(ByVal YourCompanyCode As Long)
            Me.WebMethodTransportCompanyLoadCapacitorLoadsAsync(YourCompanyCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyLoadCapacitorLoadsAsync(ByVal YourCompanyCode As Long, ByVal userState As Object)
            If (Me.WebMethodTransportCompanyLoadCapacitorLoadsOperationCompleted Is Nothing) Then
                Me.WebMethodTransportCompanyLoadCapacitorLoadsOperationCompleted = AddressOf Me.OnWebMethodTransportCompanyLoadCapacitorLoadsOperationCompleted
            End If
            Me.InvokeAsync("WebMethodTransportCompanyLoadCapacitorLoads", New Object() {YourCompanyCode}, Me.WebMethodTransportCompanyLoadCapacitorLoadsOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodTransportCompanyLoadCapacitorLoadsOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodTransportCompanyLoadCapacitorLoadsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodTransportCompanyLoadCapacitorLoadsCompleted(Me, New WebMethodTransportCompanyLoadCapacitorLoadsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodTransportCompanyLoadCapacitorSedimentedLoads", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebMethodTransportCompanyLoadCapacitorSedimentedLoads(ByVal YourCompanyCode As Long) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WebMethodTransportCompanyLoadCapacitorSedimentedLoads", New Object() {YourCompanyCode})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyLoadCapacitorSedimentedLoadsAsync(ByVal YourCompanyCode As Long)
            Me.WebMethodTransportCompanyLoadCapacitorSedimentedLoadsAsync(YourCompanyCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyLoadCapacitorSedimentedLoadsAsync(ByVal YourCompanyCode As Long, ByVal userState As Object)
            If (Me.WebMethodTransportCompanyLoadCapacitorSedimentedLoadsOperationCompleted Is Nothing) Then
                Me.WebMethodTransportCompanyLoadCapacitorSedimentedLoadsOperationCompleted = AddressOf Me.OnWebMethodTransportCompanyLoadCapacitorSedimentedLoadsOperationCompleted
            End If
            Me.InvokeAsync("WebMethodTransportCompanyLoadCapacitorSedimentedLoads", New Object() {YourCompanyCode}, Me.WebMethodTransportCompanyLoadCapacitorSedimentedLoadsOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodTransportCompanyLoadCapacitorSedimentedLoadsOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodTransportCompanyLoadCapacitorSedimentedLoadsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodTransportCompanyLoadCapacitorSedimentedLoadsCompleted(Me, New WebMethodTransportCompanyLoadCapacitorSedimentedLoadsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodGetNSSCarTruckBySmartCarNofromRmto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodGetNSSCarTruckBySmartCarNofromRmto(ByVal YourSmartCardNo As String, ByRef Pelak As String, ByRef Serial As String)
            Dim results() As Object = Me.Invoke("WebMethodGetNSSCarTruckBySmartCarNofromRmto", New Object() {YourSmartCardNo, Pelak, Serial})
            Pelak = CType(results(0),String)
            Serial = CType(results(1),String)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodGetNSSCarTruckBySmartCarNofromRmtoAsync(ByVal YourSmartCardNo As String, ByVal Pelak As String, ByVal Serial As String)
            Me.WebMethodGetNSSCarTruckBySmartCarNofromRmtoAsync(YourSmartCardNo, Pelak, Serial, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodGetNSSCarTruckBySmartCarNofromRmtoAsync(ByVal YourSmartCardNo As String, ByVal Pelak As String, ByVal Serial As String, ByVal userState As Object)
            If (Me.WebMethodGetNSSCarTruckBySmartCarNofromRmtoOperationCompleted Is Nothing) Then
                Me.WebMethodGetNSSCarTruckBySmartCarNofromRmtoOperationCompleted = AddressOf Me.OnWebMethodGetNSSCarTruckBySmartCarNofromRmtoOperationCompleted
            End If
            Me.InvokeAsync("WebMethodGetNSSCarTruckBySmartCarNofromRmto", New Object() {YourSmartCardNo, Pelak, Serial}, Me.WebMethodGetNSSCarTruckBySmartCarNofromRmtoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodGetNSSCarTruckBySmartCarNofromRmtoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodGetNSSCarTruckBySmartCarNofromRmtoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodGetNSSCarTruckBySmartCarNofromRmtoCompleted(Me, New WebMethodGetNSSCarTruckBySmartCarNofromRmtoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodGetNSSCarTruckBySmartCarNofromLocalDataBase", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodGetNSSCarTruckBySmartCarNofromLocalDataBase(ByVal YourSmartCardNo As String, ByRef Pelak As String, ByRef Serial As String)
            Dim results() As Object = Me.Invoke("WebMethodGetNSSCarTruckBySmartCarNofromLocalDataBase", New Object() {YourSmartCardNo, Pelak, Serial})
            Pelak = CType(results(0),String)
            Serial = CType(results(1),String)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodGetNSSCarTruckBySmartCarNofromLocalDataBaseAsync(ByVal YourSmartCardNo As String, ByVal Pelak As String, ByVal Serial As String)
            Me.WebMethodGetNSSCarTruckBySmartCarNofromLocalDataBaseAsync(YourSmartCardNo, Pelak, Serial, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodGetNSSCarTruckBySmartCarNofromLocalDataBaseAsync(ByVal YourSmartCardNo As String, ByVal Pelak As String, ByVal Serial As String, ByVal userState As Object)
            If (Me.WebMethodGetNSSCarTruckBySmartCarNofromLocalDataBaseOperationCompleted Is Nothing) Then
                Me.WebMethodGetNSSCarTruckBySmartCarNofromLocalDataBaseOperationCompleted = AddressOf Me.OnWebMethodGetNSSCarTruckBySmartCarNofromLocalDataBaseOperationCompleted
            End If
            Me.InvokeAsync("WebMethodGetNSSCarTruckBySmartCarNofromLocalDataBase", New Object() {YourSmartCardNo, Pelak, Serial}, Me.WebMethodGetNSSCarTruckBySmartCarNofromLocalDataBaseOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodGetNSSCarTruckBySmartCarNofromLocalDataBaseOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodGetNSSCarTruckBySmartCarNofromLocalDataBaseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodGetNSSCarTruckBySmartCarNofromLocalDataBaseCompleted(Me, New WebMethodGetNSSCarTruckBySmartCarNofromLocalDataBaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodGetNSSDriverTruckBySmartCarNofromRmto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodGetNSSDriverTruckBySmartCarNofromRmto(ByVal YourSmartCardNo As String, ByRef PersonFullName As String, ByRef NationalCode As String, ByRef DrivingLicenceNo As String)
            Dim results() As Object = Me.Invoke("WebMethodGetNSSDriverTruckBySmartCarNofromRmto", New Object() {YourSmartCardNo, PersonFullName, NationalCode, DrivingLicenceNo})
            PersonFullName = CType(results(0),String)
            NationalCode = CType(results(1),String)
            DrivingLicenceNo = CType(results(2),String)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodGetNSSDriverTruckBySmartCarNofromRmtoAsync(ByVal YourSmartCardNo As String, ByVal PersonFullName As String, ByVal NationalCode As String, ByVal DrivingLicenceNo As String)
            Me.WebMethodGetNSSDriverTruckBySmartCarNofromRmtoAsync(YourSmartCardNo, PersonFullName, NationalCode, DrivingLicenceNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodGetNSSDriverTruckBySmartCarNofromRmtoAsync(ByVal YourSmartCardNo As String, ByVal PersonFullName As String, ByVal NationalCode As String, ByVal DrivingLicenceNo As String, ByVal userState As Object)
            If (Me.WebMethodGetNSSDriverTruckBySmartCarNofromRmtoOperationCompleted Is Nothing) Then
                Me.WebMethodGetNSSDriverTruckBySmartCarNofromRmtoOperationCompleted = AddressOf Me.OnWebMethodGetNSSDriverTruckBySmartCarNofromRmtoOperationCompleted
            End If
            Me.InvokeAsync("WebMethodGetNSSDriverTruckBySmartCarNofromRmto", New Object() {YourSmartCardNo, PersonFullName, NationalCode, DrivingLicenceNo}, Me.WebMethodGetNSSDriverTruckBySmartCarNofromRmtoOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodGetNSSDriverTruckBySmartCarNofromRmtoOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodGetNSSDriverTruckBySmartCarNofromRmtoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodGetNSSDriverTruckBySmartCarNofromRmtoCompleted(Me, New WebMethodGetNSSDriverTruckBySmartCarNofromRmtoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBase", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBase(ByVal YourSmartCardNo As String, ByRef PersonFullName As String, ByRef NationalCode As String, ByRef DrivingLicenceNo As String)
            Dim results() As Object = Me.Invoke("WebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBase", New Object() {YourSmartCardNo, PersonFullName, NationalCode, DrivingLicenceNo})
            PersonFullName = CType(results(0),String)
            NationalCode = CType(results(1),String)
            DrivingLicenceNo = CType(results(2),String)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBaseAsync(ByVal YourSmartCardNo As String, ByVal PersonFullName As String, ByVal NationalCode As String, ByVal DrivingLicenceNo As String)
            Me.WebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBaseAsync(YourSmartCardNo, PersonFullName, NationalCode, DrivingLicenceNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBaseAsync(ByVal YourSmartCardNo As String, ByVal PersonFullName As String, ByVal NationalCode As String, ByVal DrivingLicenceNo As String, ByVal userState As Object)
            If (Me.WebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBaseOperationCompleted Is Nothing) Then
                Me.WebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBaseOperationCompleted = AddressOf Me.OnWebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBaseOperationCompleted
            End If
            Me.InvokeAsync("WebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBase", New Object() {YourSmartCardNo, PersonFullName, NationalCode, DrivingLicenceNo}, Me.WebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBaseOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBaseOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBaseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBaseCompleted(Me, New WebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodMobileUserMobileNumberRegistering", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodMobileUserMobileNumberRegistering(ByVal YourSmartCardNo As String, ByVal YourMobileNumber As String)
            Me.Invoke("WebMethodMobileUserMobileNumberRegistering", New Object() {YourSmartCardNo, YourMobileNumber})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodMobileUserMobileNumberRegisteringAsync(ByVal YourSmartCardNo As String, ByVal YourMobileNumber As String)
            Me.WebMethodMobileUserMobileNumberRegisteringAsync(YourSmartCardNo, YourMobileNumber, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodMobileUserMobileNumberRegisteringAsync(ByVal YourSmartCardNo As String, ByVal YourMobileNumber As String, ByVal userState As Object)
            If (Me.WebMethodMobileUserMobileNumberRegisteringOperationCompleted Is Nothing) Then
                Me.WebMethodMobileUserMobileNumberRegisteringOperationCompleted = AddressOf Me.OnWebMethodMobileUserMobileNumberRegisteringOperationCompleted
            End If
            Me.InvokeAsync("WebMethodMobileUserMobileNumberRegistering", New Object() {YourSmartCardNo, YourMobileNumber}, Me.WebMethodMobileUserMobileNumberRegisteringOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodMobileUserMobileNumberRegisteringOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodMobileUserMobileNumberRegisteringCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodMobileUserMobileNumberRegisteringCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodCreateRelationBetweenCarTruckAndDriverTruck", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodCreateRelationBetweenCarTruckAndDriverTruck(ByVal YourCarTruckSmartCardNo As String, ByVal YourDriverTruckSmartCardNo As String)
            Me.Invoke("WebMethodCreateRelationBetweenCarTruckAndDriverTruck", New Object() {YourCarTruckSmartCardNo, YourDriverTruckSmartCardNo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodCreateRelationBetweenCarTruckAndDriverTruckAsync(ByVal YourCarTruckSmartCardNo As String, ByVal YourDriverTruckSmartCardNo As String)
            Me.WebMethodCreateRelationBetweenCarTruckAndDriverTruckAsync(YourCarTruckSmartCardNo, YourDriverTruckSmartCardNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodCreateRelationBetweenCarTruckAndDriverTruckAsync(ByVal YourCarTruckSmartCardNo As String, ByVal YourDriverTruckSmartCardNo As String, ByVal userState As Object)
            If (Me.WebMethodCreateRelationBetweenCarTruckAndDriverTruckOperationCompleted Is Nothing) Then
                Me.WebMethodCreateRelationBetweenCarTruckAndDriverTruckOperationCompleted = AddressOf Me.OnWebMethodCreateRelationBetweenCarTruckAndDriverTruckOperationCompleted
            End If
            Me.InvokeAsync("WebMethodCreateRelationBetweenCarTruckAndDriverTruck", New Object() {YourCarTruckSmartCardNo, YourDriverTruckSmartCardNo}, Me.WebMethodCreateRelationBetweenCarTruckAndDriverTruckOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodCreateRelationBetweenCarTruckAndDriverTruckOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodCreateRelationBetweenCarTruckAndDriverTruckCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodCreateRelationBetweenCarTruckAndDriverTruckCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationMe"& _ 
            "ssageProduce", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationMessageProduce(ByVal YourComapnyCode As Long, ByVal YournEstelamId As Long, ByVal YourCarTruckSmartCardNo As String, ByVal YourDriverTruckSmartCardNo As String)
            Me.Invoke("WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationMessageProduce", New Object() {YourComapnyCode, YournEstelamId, YourCarTruckSmartCardNo, YourDriverTruckSmartCardNo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationMessageProduceAsync(ByVal YourComapnyCode As Long, ByVal YournEstelamId As Long, ByVal YourCarTruckSmartCardNo As String, ByVal YourDriverTruckSmartCardNo As String)
            Me.WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationMessageProduceAsync(YourComapnyCode, YournEstelamId, YourCarTruckSmartCardNo, YourDriverTruckSmartCardNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationMessageProduceAsync(ByVal YourComapnyCode As Long, ByVal YournEstelamId As Long, ByVal YourCarTruckSmartCardNo As String, ByVal YourDriverTruckSmartCardNo As String, ByVal userState As Object)
            If (Me.WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationMessageProduceOperationCompleted Is Nothing) Then
                Me.WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationMessageProduceOperationCompleted = AddressOf Me.OnWebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationMessageProduceOperationCompleted
            End If
            Me.InvokeAsync("WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationMessageProduce", New Object() {YourComapnyCode, YournEstelamId, YourCarTruckSmartCardNo, YourDriverTruckSmartCardNo}, Me.WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationMessageProduceOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationMessageProduceOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationMessageProduceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationMessageProduceCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAn"& _ 
            "dPermisiion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAndPermisiion(ByVal YourComapnyCode As Long, ByVal YournEstelamId As Long, ByVal YourCarTruckSmartCardNo As String, ByVal YourDriverTruckSmartCardNo As String) As Long
            Dim results() As Object = Me.Invoke("WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAndPermisiion", New Object() {YourComapnyCode, YournEstelamId, YourCarTruckSmartCardNo, YourDriverTruckSmartCardNo})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAndPermisiionAsync(ByVal YourComapnyCode As Long, ByVal YournEstelamId As Long, ByVal YourCarTruckSmartCardNo As String, ByVal YourDriverTruckSmartCardNo As String)
            Me.WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAndPermisiionAsync(YourComapnyCode, YournEstelamId, YourCarTruckSmartCardNo, YourDriverTruckSmartCardNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAndPermisiionAsync(ByVal YourComapnyCode As Long, ByVal YournEstelamId As Long, ByVal YourCarTruckSmartCardNo As String, ByVal YourDriverTruckSmartCardNo As String, ByVal userState As Object)
            If (Me.WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAndPermisiionOperationCompleted Is Nothing) Then
                Me.WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAndPermisiionOperationCompleted = AddressOf Me.OnWebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAndPermisiionOperationCompleted
            End If
            Me.InvokeAsync("WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAndPermisiion", New Object() {YourComapnyCode, YournEstelamId, YourCarTruckSmartCardNo, YourDriverTruckSmartCardNo}, Me.WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAndPermisiionOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAndPermisiionOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAndPermisiionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAndPermisiionCompleted(Me, New WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAndPermisiionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiio"& _ 
            "nPrintingInf", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub WebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiionPrintingInf( _
                    ByVal YournEstelamId As Long,  _
                    ByVal YourTurnId As Long,  _
                    ByRef StrExitDate As String,  _
                    ByRef StrExitTime As String,  _
                    ByRef nEstelamId As String,  _
                    ByRef TurnId As String,  _
                    ByRef CompanyName As String,  _
                    ByRef CarTruckLoaderTypeName As String,  _
                    ByRef Pelak As String,  _
                    ByRef Serial As String,  _
                    ByRef DriverTruckFullNameFamily As String,  _
                    ByRef DriverTruckDrivingLicenseNo As String,  _
                    ByRef ProductName As String,  _
                    ByRef TargetCityName As String,  _
                    ByRef StrPriceSug As String,  _
                    ByRef StrDescription As String,  _
                    ByRef PermissionUserName As String,  _
                    ByRef OtherNote As String)
            Dim results() As Object = Me.Invoke("WebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiionPrintingInf", New Object() {YournEstelamId, YourTurnId, StrExitDate, StrExitTime, nEstelamId, TurnId, CompanyName, CarTruckLoaderTypeName, Pelak, Serial, DriverTruckFullNameFamily, DriverTruckDrivingLicenseNo, ProductName, TargetCityName, StrPriceSug, StrDescription, PermissionUserName, OtherNote})
            StrExitDate = CType(results(0),String)
            StrExitTime = CType(results(1),String)
            nEstelamId = CType(results(2),String)
            TurnId = CType(results(3),String)
            CompanyName = CType(results(4),String)
            CarTruckLoaderTypeName = CType(results(5),String)
            Pelak = CType(results(6),String)
            Serial = CType(results(7),String)
            DriverTruckFullNameFamily = CType(results(8),String)
            DriverTruckDrivingLicenseNo = CType(results(9),String)
            ProductName = CType(results(10),String)
            TargetCityName = CType(results(11),String)
            StrPriceSug = CType(results(12),String)
            StrDescription = CType(results(13),String)
            PermissionUserName = CType(results(14),String)
            OtherNote = CType(results(15),String)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiionPrintingInfAsync( _
                    ByVal YournEstelamId As Long,  _
                    ByVal YourTurnId As Long,  _
                    ByVal StrExitDate As String,  _
                    ByVal StrExitTime As String,  _
                    ByVal nEstelamId As String,  _
                    ByVal TurnId As String,  _
                    ByVal CompanyName As String,  _
                    ByVal CarTruckLoaderTypeName As String,  _
                    ByVal Pelak As String,  _
                    ByVal Serial As String,  _
                    ByVal DriverTruckFullNameFamily As String,  _
                    ByVal DriverTruckDrivingLicenseNo As String,  _
                    ByVal ProductName As String,  _
                    ByVal TargetCityName As String,  _
                    ByVal StrPriceSug As String,  _
                    ByVal StrDescription As String,  _
                    ByVal PermissionUserName As String,  _
                    ByVal OtherNote As String)
            Me.WebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiionPrintingInfAsync(YournEstelamId, YourTurnId, StrExitDate, StrExitTime, nEstelamId, TurnId, CompanyName, CarTruckLoaderTypeName, Pelak, Serial, DriverTruckFullNameFamily, DriverTruckDrivingLicenseNo, ProductName, TargetCityName, StrPriceSug, StrDescription, PermissionUserName, OtherNote, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiionPrintingInfAsync( _
                    ByVal YournEstelamId As Long,  _
                    ByVal YourTurnId As Long,  _
                    ByVal StrExitDate As String,  _
                    ByVal StrExitTime As String,  _
                    ByVal nEstelamId As String,  _
                    ByVal TurnId As String,  _
                    ByVal CompanyName As String,  _
                    ByVal CarTruckLoaderTypeName As String,  _
                    ByVal Pelak As String,  _
                    ByVal Serial As String,  _
                    ByVal DriverTruckFullNameFamily As String,  _
                    ByVal DriverTruckDrivingLicenseNo As String,  _
                    ByVal ProductName As String,  _
                    ByVal TargetCityName As String,  _
                    ByVal StrPriceSug As String,  _
                    ByVal StrDescription As String,  _
                    ByVal PermissionUserName As String,  _
                    ByVal OtherNote As String,  _
                    ByVal userState As Object)
            If (Me.WebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiionPrintingInfOperationCompleted Is Nothing) Then
                Me.WebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiionPrintingInfOperationCompleted = AddressOf Me.OnWebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiionPrintingInfOperationCompleted
            End If
            Me.InvokeAsync("WebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiionPrintingInf", New Object() {YournEstelamId, YourTurnId, StrExitDate, StrExitTime, nEstelamId, TurnId, CompanyName, CarTruckLoaderTypeName, Pelak, Serial, DriverTruckFullNameFamily, DriverTruckDrivingLicenseNo, ProductName, TargetCityName, StrPriceSug, StrDescription, PermissionUserName, OtherNote}, Me.WebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiionPrintingInfOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiionPrintingInfOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiionPrintingInfCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiionPrintingInfCompleted(Me, New WebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiionPrintingInfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodTransportCompanyGetMoneyWalletInventory", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebMethodTransportCompanyGetMoneyWalletInventory(ByVal YourComapnyCode As Long) As Long
            Dim results() As Object = Me.Invoke("WebMethodTransportCompanyGetMoneyWalletInventory", New Object() {YourComapnyCode})
            Return CType(results(0),Long)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyGetMoneyWalletInventoryAsync(ByVal YourComapnyCode As Long)
            Me.WebMethodTransportCompanyGetMoneyWalletInventoryAsync(YourComapnyCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodTransportCompanyGetMoneyWalletInventoryAsync(ByVal YourComapnyCode As Long, ByVal userState As Object)
            If (Me.WebMethodTransportCompanyGetMoneyWalletInventoryOperationCompleted Is Nothing) Then
                Me.WebMethodTransportCompanyGetMoneyWalletInventoryOperationCompleted = AddressOf Me.OnWebMethodTransportCompanyGetMoneyWalletInventoryOperationCompleted
            End If
            Me.InvokeAsync("WebMethodTransportCompanyGetMoneyWalletInventory", New Object() {YourComapnyCode}, Me.WebMethodTransportCompanyGetMoneyWalletInventoryOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodTransportCompanyGetMoneyWalletInventoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodTransportCompanyGetMoneyWalletInventoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodTransportCompanyGetMoneyWalletInventoryCompleted(Me, New WebMethodTransportCompanyGetMoneyWalletInventoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodGetAllPermissionEnterExits", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebMethodGetAllPermissionEnterExits(ByVal YournEstelamId As Long) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("WebMethodGetAllPermissionEnterExits", New Object() {YournEstelamId})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebMethodGetAllPermissionEnterExitsAsync(ByVal YournEstelamId As Long)
            Me.WebMethodGetAllPermissionEnterExitsAsync(YournEstelamId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodGetAllPermissionEnterExitsAsync(ByVal YournEstelamId As Long, ByVal userState As Object)
            If (Me.WebMethodGetAllPermissionEnterExitsOperationCompleted Is Nothing) Then
                Me.WebMethodGetAllPermissionEnterExitsOperationCompleted = AddressOf Me.OnWebMethodGetAllPermissionEnterExitsOperationCompleted
            End If
            Me.InvokeAsync("WebMethodGetAllPermissionEnterExits", New Object() {YournEstelamId}, Me.WebMethodGetAllPermissionEnterExitsOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodGetAllPermissionEnterExitsOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodGetAllPermissionEnterExitsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodGetAllPermissionEnterExitsCompleted(Me, New WebMethodGetAllPermissionEnterExitsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodGetTransportCompaniesDailyMessage", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebMethodGetTransportCompaniesDailyMessage(ByRef YourDailyMessageColorHolder As String) As String
            Dim results() As Object = Me.Invoke("WebMethodGetTransportCompaniesDailyMessage", New Object() {YourDailyMessageColorHolder})
            YourDailyMessageColorHolder = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebMethodGetTransportCompaniesDailyMessageAsync(ByVal YourDailyMessageColorHolder As String)
            Me.WebMethodGetTransportCompaniesDailyMessageAsync(YourDailyMessageColorHolder, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodGetTransportCompaniesDailyMessageAsync(ByVal YourDailyMessageColorHolder As String, ByVal userState As Object)
            If (Me.WebMethodGetTransportCompaniesDailyMessageOperationCompleted Is Nothing) Then
                Me.WebMethodGetTransportCompaniesDailyMessageOperationCompleted = AddressOf Me.OnWebMethodGetTransportCompaniesDailyMessageOperationCompleted
            End If
            Me.InvokeAsync("WebMethodGetTransportCompaniesDailyMessage", New Object() {YourDailyMessageColorHolder}, Me.WebMethodGetTransportCompaniesDailyMessageOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodGetTransportCompaniesDailyMessageOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodGetTransportCompaniesDailyMessageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodGetTransportCompaniesDailyMessageCompleted(Me, New WebMethodGetTransportCompaniesDailyMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodGetTransportCompaniesFirstPageMessages", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebMethodGetTransportCompaniesFirstPageMessages() As String
            Dim results() As Object = Me.Invoke("WebMethodGetTransportCompaniesFirstPageMessages", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebMethodGetTransportCompaniesFirstPageMessagesAsync()
            Me.WebMethodGetTransportCompaniesFirstPageMessagesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodGetTransportCompaniesFirstPageMessagesAsync(ByVal userState As Object)
            If (Me.WebMethodGetTransportCompaniesFirstPageMessagesOperationCompleted Is Nothing) Then
                Me.WebMethodGetTransportCompaniesFirstPageMessagesOperationCompleted = AddressOf Me.OnWebMethodGetTransportCompaniesFirstPageMessagesOperationCompleted
            End If
            Me.InvokeAsync("WebMethodGetTransportCompaniesFirstPageMessages", New Object(-1) {}, Me.WebMethodGetTransportCompaniesFirstPageMessagesOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodGetTransportCompaniesFirstPageMessagesOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodGetTransportCompaniesFirstPageMessagesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodGetTransportCompaniesFirstPageMessagesCompleted(Me, New WebMethodGetTransportCompaniesFirstPageMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WebMethodISCompanyActive", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WebMethodISCompanyActive(ByVal YourCompanyCode As Long) As Boolean
            Dim results() As Object = Me.Invoke("WebMethodISCompanyActive", New Object() {YourCompanyCode})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WebMethodISCompanyActiveAsync(ByVal YourCompanyCode As Long)
            Me.WebMethodISCompanyActiveAsync(YourCompanyCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WebMethodISCompanyActiveAsync(ByVal YourCompanyCode As Long, ByVal userState As Object)
            If (Me.WebMethodISCompanyActiveOperationCompleted Is Nothing) Then
                Me.WebMethodISCompanyActiveOperationCompleted = AddressOf Me.OnWebMethodISCompanyActiveOperationCompleted
            End If
            Me.InvokeAsync("WebMethodISCompanyActive", New Object() {YourCompanyCode}, Me.WebMethodISCompanyActiveOperationCompleted, userState)
        End Sub
        
        Private Sub OnWebMethodISCompanyActiveOperationCompleted(ByVal arg As Object)
            If (Not (Me.WebMethodISCompanyActiveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WebMethodISCompanyActiveCompleted(Me, New WebMethodISCompanyActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodReportingInformationPrividerSedimentedLoadsReportCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodReportingInformationPrividerTruckersAssociationFinancialReportCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodReportingInformationPrividerContractorCompanyFinancialReportCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodReportingInformationPrividerDriverTruckLoadsReportCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodReportingInformationPrividerCapacitorLoadsforAnnounceReportCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodReportingInformationPrividerCapacitorLoadsTransportCompaniesRegisteredLoadsReportCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodReportingInformationPrividerAnnouncementHallsPerformanceReportCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodReportingInformationPrividerAnnouncementHallsPerformanceGeneralStatisticsReportCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodReportingInformationPrividerTruckDriversWaitingToGetLoadPermissionReportCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodReportingInformationPrividerTrucksAverageOfSleepDaysToGetLoadPermissionReportCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodReportingInformationPrividerTravelLengthOfLoadTargetsReportCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodReportingInformationProviderTransportPriceTarrifsReportCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodReportingInformationProviderIndigenousTrucksWithUNNativeLPReportCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodGetDSPersonnelFingerPrintsCompletedEventHandler(ByVal sender As Object, ByVal e As WebMethodGetDSPersonnelFingerPrintsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebMethodGetDSPersonnelFingerPrintsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodComputerMessageProduceCopyOfTurnCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodComputerMessageProduceSodoorNobatCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodCarTruckHasTurnCompletedEventHandler(ByVal sender As Object, ByVal e As WebMethodCarTruckHasTurnCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebMethodCarTruckHasTurnCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodTransportCompanyLoadCapacitorLoadRegisterCompletedEventHandler(ByVal sender As Object, ByVal e As WebMethodTransportCompanyLoadCapacitorLoadRegisterCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebMethodTransportCompanyLoadCapacitorLoadRegisterCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTIdCompletedEventHandler(ByVal sender As Object, ByVal e As WebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebMethodTransportCompanyLoadCapacitorLoadRegisterWithTTPTIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodTransportCompanyLoadCapacitorLoadEditCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodTransportCompanyLoadCapacitorLoadDeleteCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodTransportCompanyLoadsCompletedEventHandler(ByVal sender As Object, ByVal e As WebMethodTransportCompanyLoadsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebMethodTransportCompanyLoadsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodTransportCompanyCitiesCompletedEventHandler(ByVal sender As Object, ByVal e As WebMethodTransportCompanyCitiesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebMethodTransportCompanyCitiesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodTransportCompanyCarTypesCompletedEventHandler(ByVal sender As Object, ByVal e As WebMethodTransportCompanyCarTypesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebMethodTransportCompanyCarTypesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodTransportCompanyLoadCapacitorLoadsCompletedEventHandler(ByVal sender As Object, ByVal e As WebMethodTransportCompanyLoadCapacitorLoadsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebMethodTransportCompanyLoadCapacitorLoadsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodTransportCompanyLoadCapacitorSedimentedLoadsCompletedEventHandler(ByVal sender As Object, ByVal e As WebMethodTransportCompanyLoadCapacitorSedimentedLoadsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebMethodTransportCompanyLoadCapacitorSedimentedLoadsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodGetNSSCarTruckBySmartCarNofromRmtoCompletedEventHandler(ByVal sender As Object, ByVal e As WebMethodGetNSSCarTruckBySmartCarNofromRmtoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebMethodGetNSSCarTruckBySmartCarNofromRmtoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Pelak() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Serial() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodGetNSSCarTruckBySmartCarNofromLocalDataBaseCompletedEventHandler(ByVal sender As Object, ByVal e As WebMethodGetNSSCarTruckBySmartCarNofromLocalDataBaseCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebMethodGetNSSCarTruckBySmartCarNofromLocalDataBaseCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Pelak() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Serial() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodGetNSSDriverTruckBySmartCarNofromRmtoCompletedEventHandler(ByVal sender As Object, ByVal e As WebMethodGetNSSDriverTruckBySmartCarNofromRmtoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebMethodGetNSSDriverTruckBySmartCarNofromRmtoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property PersonFullName() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property NationalCode() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property DrivingLicenceNo() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBaseCompletedEventHandler(ByVal sender As Object, ByVal e As WebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBaseCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebMethodGetNSSDriverTruckBySmartCarNofromLocalDataBaseCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property PersonFullName() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property NationalCode() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property DrivingLicenceNo() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodMobileUserMobileNumberRegisteringCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodCreateRelationBetweenCarTruckAndDriverTruckCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationMessageProduceCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAndPermisiionCompletedEventHandler(ByVal sender As Object, ByVal e As WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAndPermisiionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebMethodTransportCompanyLoadCapacitorSedimentLoadAllocationAndPermisiionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiionPrintingInfCompletedEventHandler(ByVal sender As Object, ByVal e As WebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiionPrintingInfCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebMethodTransportCompanyGetLoadCapacitorSedimentLoadPermisiionPrintingInfCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property StrExitDate() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property StrExitTime() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property nEstelamId() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property TurnId() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property CompanyName() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property CarTruckLoaderTypeName() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(5),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Pelak() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(6),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property Serial() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(7),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property DriverTruckFullNameFamily() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(8),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property DriverTruckDrivingLicenseNo() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(9),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ProductName() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(10),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property TargetCityName() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(11),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property StrPriceSug() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(12),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property StrDescription() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(13),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property PermissionUserName() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(14),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property OtherNote() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(15),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodTransportCompanyGetMoneyWalletInventoryCompletedEventHandler(ByVal sender As Object, ByVal e As WebMethodTransportCompanyGetMoneyWalletInventoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebMethodTransportCompanyGetMoneyWalletInventoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Long)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodGetAllPermissionEnterExitsCompletedEventHandler(ByVal sender As Object, ByVal e As WebMethodGetAllPermissionEnterExitsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebMethodGetAllPermissionEnterExitsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodGetTransportCompaniesDailyMessageCompletedEventHandler(ByVal sender As Object, ByVal e As WebMethodGetTransportCompaniesDailyMessageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebMethodGetTransportCompaniesDailyMessageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property YourDailyMessageColorHolder() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodGetTransportCompaniesFirstPageMessagesCompletedEventHandler(ByVal sender As Object, ByVal e As WebMethodGetTransportCompaniesFirstPageMessagesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebMethodGetTransportCompaniesFirstPageMessagesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")>  _
    Public Delegate Sub WebMethodISCompanyActiveCompletedEventHandler(ByVal sender As Object, ByVal e As WebMethodISCompanyActiveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WebMethodISCompanyActiveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
End Namespace
